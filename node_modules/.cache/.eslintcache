[{"/Volumes/DATA/Web Dev/React/user-app/src/index.tsx":"1","/Volumes/DATA/Web Dev/React/user-app/src/reportWebVitals.ts":"2","/Volumes/DATA/Web Dev/React/user-app/src/App.tsx":"3","/Volumes/DATA/Web Dev/React/user-app/src/pages/home.tsx":"4","/Volumes/DATA/Web Dev/React/user-app/src/redux/actions.ts":"5","/Volumes/DATA/Web Dev/React/user-app/src/redux/actionType.ts":"6","/Volumes/DATA/Web Dev/React/user-app/src/redux/reducer.ts":"7","/Volumes/DATA/Web Dev/React/user-app/src/redux/root-reducer.ts":"8","/Volumes/DATA/Web Dev/React/user-app/src/redux/store.ts":"9","/Volumes/DATA/Web Dev/React/user-app/src/pages/addUser.tsx":"10","/Volumes/DATA/Web Dev/React/user-app/src/pages/editUser.tsx":"11","/Volumes/DATA/Web Dev/React/user-app/src/pages/viewUser.tsx":"12"},{"size":773,"mtime":1669177177000,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1669120138000,"results":"15","hashOfConfig":"14"},{"size":632,"mtime":1669319792000,"results":"16","hashOfConfig":"14"},{"size":5445,"mtime":1669349605000,"results":"17","hashOfConfig":"14"},{"size":3615,"mtime":1669358281000,"results":"18","hashOfConfig":"14"},{"size":335,"mtime":1669335512000,"results":"19","hashOfConfig":"14"},{"size":1053,"mtime":1669335698000,"results":"20","hashOfConfig":"14"},{"size":186,"mtime":1669265098000,"results":"21","hashOfConfig":"14"},{"size":499,"mtime":1669265325000,"results":"22","hashOfConfig":"14"},{"size":2409,"mtime":1669356944000,"results":"23","hashOfConfig":"14"},{"size":2733,"mtime":1669356964000,"results":"24","hashOfConfig":"14"},{"size":7514,"mtime":1669357909000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"yelu6z",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/DATA/Web Dev/React/user-app/src/index.tsx",[],[],[],"/Volumes/DATA/Web Dev/React/user-app/src/reportWebVitals.ts",[],[],"/Volumes/DATA/Web Dev/React/user-app/src/App.tsx",[],[],[],"/Volumes/DATA/Web Dev/React/user-app/src/pages/home.tsx",["65","66"],[],"import React, {useEffect} from \"react\";\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport TablePagination from '@mui/material/TablePagination';\nimport { red } from '@mui/material/colors';\nimport { RootState, useAppDispatch, useAppSelector } from \"../redux/store\";\nimport { deleteUsers, loadUsers } from \"../redux/actions\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: red[900],\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n}));\n  \nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n}));\n\nconst CustomAddButton = styled(Button) ({\n    float: 'right',\n    // position: 'relative',\n    // top: '60px',\n    // right: '30px',\n    marginTop: '20px',\n    marginRight: '30px',\n    width: '15%',\n    backgroundColor: 'black',\n    fontWeight: 'bold',\n    '&:hover': {\n        backgroundColor: 'black',\n        borderColor: 'black',\n        boxShadow: 'none',\n    }\n});\n\nconst Home = () => {\n    let dispatch = useAppDispatch();\n    let navigate = useNavigate();\n    const { users } = useAppSelector((state) => state.data);\n    useEffect(() => {\n        dispatch(loadUsers());\n    }, []);\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Are you sure want to delete the user ?\")) {\n            dispatch(deleteUsers(id));\n        }\n    };\n\n    const [page, setPage] = React.useState(2);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (\n        event: React.MouseEvent<HTMLButtonElement> | null,\n        newPage: number,\n    ) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    ) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n    return (\n        <div>\n            <div>\n            <h2 style={{ float: 'left', marginLeft: '30px' }}>User List</h2>\n            <CustomAddButton variant=\"contained\" onClick={() => navigate('/addUser')}>Add User</CustomAddButton>\n            </div>\n            <TableContainer component={Paper}>\n                <Table sx={{ marginTop: 1, minWidth: 900 }} aria-label=\"customized table\">\n                    <TableHead>\n                    <TableRow>\n                        <StyledTableCell style={{ fontWeight: 'bold' }} align=\"center\">ID</StyledTableCell>\n                        <StyledTableCell style={{ fontWeight: 'bold' }} align=\"center\">Name</StyledTableCell>\n                        <StyledTableCell style={{ fontWeight: 'bold' }} align=\"center\">Email</StyledTableCell>\n                        <StyledTableCell style={{ fontWeight: 'bold' }} align=\"center\">Gender</StyledTableCell>\n                        <StyledTableCell style={{ fontWeight: 'bold' }} align=\"center\">Status</StyledTableCell>\n                        <StyledTableCell style={{ fontWeight: 'bold' }} align=\"center\">Action</StyledTableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {users && users.map((user) => (\n                        <StyledTableRow key={user.id}>\n                            <StyledTableCell component=\"th\" scope=\"row\">{user.id}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{user.name}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{user.email}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{user.gender}</StyledTableCell>\n                            <StyledTableCell align=\"center\">{user.status}</StyledTableCell>\n                            <StyledTableCell align=\"center\">\n                                <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"text button group\">\n                                    <Button color=\"primary\" onClick={() => navigate(`/viewUser/${user.id}`)}>View</Button>\n                                    <Button color=\"primary\" onClick={() => navigate(`/editUser/${user.id}`)}>Update</Button>\n                                    <Button color=\"error\" onClick={() => handleDelete(user.id)}>Delete</Button>\n                                </ButtonGroup>\n                            </StyledTableCell>\n                        </StyledTableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                component=\"div\"\n                count={100}\n                page={page}\n                onPageChange={handleChangePage}\n                rowsPerPage={rowsPerPage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </div>\n    )\n}\n\nexport default Home;","/Volumes/DATA/Web Dev/React/user-app/src/redux/actions.ts",[],[],"/Volumes/DATA/Web Dev/React/user-app/src/redux/actionType.ts",[],[],"/Volumes/DATA/Web Dev/React/user-app/src/redux/reducer.ts",[],[],"/Volumes/DATA/Web Dev/React/user-app/src/redux/root-reducer.ts",[],[],"/Volumes/DATA/Web Dev/React/user-app/src/redux/store.ts",[],[],"/Volumes/DATA/Web Dev/React/user-app/src/pages/addUser.tsx",[],[],"/Volumes/DATA/Web Dev/React/user-app/src/pages/editUser.tsx",["67"],[],"/Volumes/DATA/Web Dev/React/user-app/src/pages/viewUser.tsx",["68","69","70","71","72","73","74"],[],{"ruleId":"75","severity":1,"message":"76","line":14,"column":10,"nodeType":"77","messageId":"78","endLine":14,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":61,"column":8,"nodeType":"81","endLine":61,"endColumn":10,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":27,"column":6,"nodeType":"81","endLine":27,"endColumn":8,"suggestions":"84"},{"ruleId":"75","severity":1,"message":"85","line":17,"column":8,"nodeType":"77","messageId":"78","endLine":17,"endColumn":25},{"ruleId":"75","severity":1,"message":"86","line":37,"column":11,"nodeType":"77","messageId":"78","endLine":37,"endColumn":15},{"ruleId":"75","severity":1,"message":"87","line":37,"column":17,"nodeType":"77","messageId":"78","endLine":37,"endColumn":22},{"ruleId":"75","severity":1,"message":"88","line":37,"column":24,"nodeType":"77","messageId":"78","endLine":37,"endColumn":30},{"ruleId":"75","severity":1,"message":"89","line":37,"column":32,"nodeType":"77","messageId":"78","endLine":37,"endColumn":38},{"ruleId":"79","severity":1,"message":"83","line":42,"column":6,"nodeType":"81","endLine":42,"endColumn":8,"suggestions":"90"},{"ruleId":"75","severity":1,"message":"91","line":50,"column":9,"nodeType":"77","messageId":"78","endLine":50,"endColumn":26},"@typescript-eslint/no-unused-vars","'RootState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["93"],"'DialogContentText' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'gender' is assigned a value but never used.","'status' is assigned a value but never used.",["94"],"'handleInputChange' is assigned a value but never used.",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [dispatch]",{"range":"100","text":"101"},"Update the dependencies array to be: [dispatch, id]",{"range":"102","text":"103"},{"range":"104","text":"103"},[1906,1908],"[dispatch]",[858,860],"[dispatch, id]",[1654,1656]]